security:
    enable_authenticator_manager: true

    encoders:
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        users:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        # dev:
        #     pattern: ^/(_(profiler|wdt)|css|images|js)/
        #     security: false
        main:
            form_login: ~
            http_basic: ~
            entry_point: form_login
            custom_authenticators:
                - App\Security\CustomLoginFormAuthenticator
            logout:
                path: logout
                csrf_token_generator: security.csrf.token_manager
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
                secure: true
                samesite: strict
                httponly: false
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/profile, roles: ROLE_USER, requires_channel: '%env(SECURE_SCHEME)%'}
        - { path: ^/uploads, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
